version: 2.1

orbs:
  slack: circleci/slack@4.12.5

commands:
    deploy_and_notify_fail:
        steps:
            - slack/notify:
                channel: circle-ci
                event: fail
                template: basic_fail_1

    deploy_and_notify_pass:
        steps:
            - slack/notify:
                channel: circle-ci
                event: pass
                template: basic_success_1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - deploy_and_notify_fail
      - deploy_and_notify_pass


  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
             cd backend
             npm install
             npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
      - deploy_and_notify_fail
      - deploy_and_notify_pass

  test-frontend:
        docker:
            - image: node:13.8-buster
        steps:
          - checkout
          - restore_cache:
              keys: [frontend-build]
          - run:
              name: Run frontend test
              command: |
                  cd frontend
                  npm install
                  npm run test
          - deploy_and_notify_fail
          - deploy_and_notify_pass

  scan-frontend:
        docker:
            - image: node:13.8-buster
        steps:
          - checkout
          - restore_cache:
              keys: [frontend-build]
          - run:
              name: Run frontend scan
              command: |
                  cd frontend
                  npm install
                  npm audit fix --audit-level=critical --force
                  npm audit fix --audit-level=critical
                  npm audit --audit-level=critical
          - deploy_and_notify_fail
          - deploy_and_notify_pass

  scan-backend:
      docker:
          - image: node:13.8-buster
      steps:
        - checkout
        - restore_cache:
            keys: [backend-build]
        - run:
            name: Run backend scan
            command: |
                cd backend
                npm install
                npm audit fix --audit-level=critical --force
                npm audit fix --audit-level=critical
                npm audit --audit-level=critical
        - deploy_and_notify_fail
        - deploy_and_notify_pass

workflows:
    default:
        jobs:
        - build-frontend
        - build-backend
        - test-frontend:
                requires: [build-frontend]
        - scan-frontend:
                  requires: [build-frontend]
        - scan-backend:
            requires: [build-backend]
